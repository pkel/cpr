name: main

on:
  - pull_request
  - push

jobs:
  ocaml:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - macos-11
        ocaml-compiler:
          - 4.11.1

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-local-packages: ocaml/*.opam
          dune-cache: true

      - name: Install dependencies
        run: opam install cpr cpr-dev --deps-only --with-test

      - name: Run tests
        working-directory: ocaml
        run: |
          export CPR_VERSION=github_ci-$(git describe --tags --dirty || git describe --all --long --dirty)
          opam exec -- dune build @fmt
          opam exec -- dune build
          opam exec -- dune runtest

      - name: Upload the gym shared object
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-ocaml-${{ matrix.ocaml-compiler }}
          path: _build/default/ocaml/gym/bridge.so

  python:
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
        python-version:
          - 3.6
          - 3.9

    needs: ocaml

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download gym shared object
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-18.04-ocaml-4.11.1
          path: python/gym/cpr_gym

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: python
        run: |
          black --check .
          flake8
          pytest --forked


  publish:
    runs-on: ubuntu-latest

    needs: ocaml

    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - name: Download gym shared object (linux)
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-18.04-ocaml-4.11.1
          path: linux

      - name: Download gym shared object (macos)
        uses: actions/download-artifact@v2
        with:
          name: macos-11-ocaml-4.11.1
          path: macos

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
